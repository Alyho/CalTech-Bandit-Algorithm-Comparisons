# -*- coding: utf-8 -*-
"""
Created on Thu May 21 14:18:05 2020

@author: student-minecraft
"""

import CoinEnvironmentWithK as cek
import numpy as np
import scipy.io as io

k = 20
c = 0.1
ProbBestCoin = 0.5

coin = cek.coin_environment_k(k, c, ProbBestCoin)

repetition = 100 #make smaller
trials = 20000 #make bigger 
mean_every_trial = np.empty(247)
stdev_every_trial = np.empty(247)
regret=[]

for explore_trials in range (1, 300):
    exploit_trials = trials - k * explore_trials
    total_every_trial = np.empty(repetition)
    arr = np.zeros((trials, repetition))
    regret_arr = np.ones((trials, repetition))/2
    
    for r in range(repetition):

        array = np.zeros(k)
        
        for i in range(1, k + 1):
    
            for n in range (explore_trials):
        
                if (coin.flip(i) == "heads"):
                     array[i-1] += 1
                     arr[i-1][r] = 1
        
        array2 = np.where(array == np.max(array))[0]
        best_coin = np.random.choice(array2) + 1
       
        total_number_of_heads = np.sum(array)
         
        for y in range (exploit_trials): 
    
            if(coin.flip(best_coin) == "heads"):
                total_number_of_heads += 1
                arr[y + k * explore_trials][r] = 1
            
        total_every_trial[r] = total_number_of_heads
        
    regret.append(np.cumsum((regret_arr - arr), axis = 0))
    
    mean_every_trial[explore_trials - 1] = np.mean(total_every_trial)
    stdev_every_trial[explore_trials - 1] = np.std(total_every_trial)

right_explore = np.argmax(mean_every_trial)
     
print ("Best number of explore trials"  +  " = " + str(right_explore + 1)) 

mean_right_explore = mean_every_trial[right_explore]
stdev_right_explore = stdev_every_trial[right_explore]
#best_result = big_array[right_explore]


#%% saving data cek

io.savemat("kExploreExploit" + str(k) + "_" + str(repetition) + "_" + str(trials) + "Data.mat", {"right_explore": right_explore, 
                                      "mean_right_explore": mean_right_explore, 
                                      "stdev_right_explore": stdev_right_explore,
                                      "regret": regret[right_explore]})